name: Build

on:
  workflow_call:
    inputs:
      BUILD_TYPE:
        description: Type of build (Debug, Release, RelWithDebInfo, MinSizeRel)
        type: string
        default: Debug

  workflow_dispatch: #For manually enable
    inputs:
      BUILD_TYPE:
        description: Type of build (Debug, Release, RelWithDebInfo, MinSizeRel)
        type: string
        default: Debug

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          -
          - name: "Windows"
            os: windows-latest
            qt_version: "6.6.2"
            target: "desktop"
            target_arch: "win64_msvc2019_64"
            host_arch: "win64_msvc2019_64"
            arch_dir: "msvc2019_64"
            
          - name: "Linux"
            os: ubuntu-latest
            qt_version: "6.4.2"
            target: "desktop"
            target_arch: "gcc_64"
            host_arch: "gcc_64"
            arch_dir: "gcc_64"

          - name: "WASM"
            os: ubuntu-latest
            qt_version: "6.6.2"
            target: "desktop"
            target_arch: "wasm_multithread"
            host_arch: "gcc_64"
            arch_dir: "wasm_multithread"

          - name: "Android arm7"
            os: ubuntu-latest
            qt_version: "6.6.2"
            target: "android"
            target_arch: "android_armv7"
            host_arch: "gcc_64"
            arch_dir: "android_armv7"

          - name: "Android arm64"
            os: ubuntu-latest
            qt_version: "6.6.2"
            target: "android"
            target_arch: "android_arm64_v8a"
            host_arch: "gcc_64"
            arch_dir: "android_arm64_v8a"

          - name: "Android x86"
            os: ubuntu-latest
            qt_version: "6.6.2"
            target: "android"
            target_arch: "android_x86"
            host_arch: "gcc_64"
            arch_dir: "android_x86"

          - name: "Android x86_64"
            os: ubuntu-latest
            qt_version: "6.6.2"
            target: "android"
            target_arch: "android_x86_64"
            host_arch: "gcc_64"
            arch_dir: "android_x86_64"

            #TODO macOS

    runs-on: ${{ matrix.os }}
    steps:
      #Inialise
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Dependencies (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get -y update
          sudo apt-get -y install ninja-build qt6-base-dev qtchooser qt6-base-dev-tools libqt6core6 qt6-tools-dev

      - name: Install Dependencies (WASM)
        if: ${{ matrix.name == 'WASM' }}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          
          # 3.1.37 is the one Qt uses
          ./emsdk install 3.1.37
          ./emsdk activate 3.1.37
          echo "EMSDK=$PWD" >> $GITHUB_ENV

      - name: Install Java (Android)
        if: ${{ matrix.target == 'Android' }}
        uses: actions/setup-java@v4.0.0
        with: 
          java-version: 17 #Java I used on my machine and it worked
          distribution: temurin
          
      - name: Install Android SDK (Android)
        if: ${{ matrix.target == 'Android' }}
        uses: android-actions/setup-android@v3.2.0
        with:
          packages: 'platforms;android-33 platform-tools build-tools;33.0.0 ndk;25.1.8937393'

      - name: Install Ninja (windows)
        if: ${{matrix.os == 'windows-latest'}}
        run: choco install ninja

      - name: Configure MSVC (windows)
        if: ${{matrix.os == 'windows-latest'}}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3.3.0
        with:
          version: ${{ matrix.qt_version }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.target_arch }}
          aqtversion: '==3.1.*'
          extra: "--autodesktop"
          set-env: false
          
      - name: Set Qt enviorment
        shell: bash
        run: |
          echo "QT_ROOT_PATH=${{ runner.workspace }}/Qt/${{ matrix.qt_version }}" >> $GITHUB_ENV
          echo "QT_TARGET_PATH=${{ runner.workspace }}/Qt/${{ matrix.qt_version }}/${{ matrix.arch_dir }}" >> $GITHUB_ENV
          echo "QT_HOST_PATH=${{ runner.workspace }}/Qt/${{ matrix.qt_version }}/${{ matrix.host_arch }}" >> $GITHUB_ENV

      #Configure!
      - name: Configure Cmake
        if: ${{ matrix.target != 'Android'}}
        run: |
          cmake -Bbuild -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} -DCMAKE_TOOLCHAIN_FILE="${{ env.QT_TARGET_PATH }}/lib/cmake/Qt6/qt.toolchain.cmake" -G Ninja

      - name: Configure Cmake (Android)
        if: ${{ matrix.target == 'Android' }}
        run: |
          #Release builds not avable yet. Going with debug.
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="${{ env.QT_TARGET_PATH }}/lib/cmake/Qt6/qt.toolchain.cmake" -DANDROID_SDK_ROOT=$ANDROID_SDK_ROOT -DANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.1.8937393 -G Ninja

      #Build!
      - name: Build!
        run: cmake --build build

      # Pack
      - name: Install Application
        run: |
          cmake --install build --prefix ./install 

      - name: Create installer (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd build
          cpack -G NSIS64

      - name: Create packages (Linux)
        if: ${{ matrix.name == 'linux' }}
        run: |
          cd build
          cpack -G TXZ
          cpack -G DEB

        # Upload
      - name: Upload install directory
        if: ${{ matrix.name != 'linux' }}
        uses: actions/upload-artifact@v4
        with:
          name: Study Guide-${{matrix.name}} 
          path: install

      - name: Upload setup (Windows)
        if: ${{ matrix.name == 'Windows' }}
        uses: actions/upload-artifact@v4
        with:
          name: Study Guide-windows-setup
          path: build/*.exe

      - name: Upload binaries (Linux)
        if: ${{ matrix.name == 'linux' }}
        uses: actions/upload-artifact@v4
        with:
          name: Study Guide-linux (tar.xz)
          path: build/*.tar.xz

      - name: Upload deb (Linux)
        if: ${{ matrix.name == 'linux' }}
        uses: actions/upload-artifact@v4
        with:
          name: Study Guide-linux (deb)
          path: build/*.deb
