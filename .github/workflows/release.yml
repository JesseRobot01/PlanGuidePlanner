name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  build_release:
    name: Build Release
    uses: ./.github/workflows/build.yml
    with:
      BUILD_TYPE: Release
      DEV_BUILD: false

  create_release:
    needs: build_release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "true"
          path: "PlanGuidePlanner-source"
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Grab and store version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV
      - name: Package artifacts properly
        run: |
          mv ${{ github.workspace }}/PlanGuidePlanner-source PlanGuidePlanner-${{ env.VERSION }}
          mv PlanGuidePlanner-Linux-Deb*/PlanGuidePlanner-*.deb PlanGuidePlanner-Linux-${{ env.VERSION }}.deb
          mv PlanGuidePlanner-Linux-*/PlanGuidePlanner-*.tar.gz PlanGuidePlanner-Linux-${{ env.VERSION }}.tar.gz
          
          tar --exclude='.git' -czf PlanGuidePlanner-WASM-${{ env.VERSION }}.tar.gz PlanGuidePlanner-WASM-*
          tar --exclude='.git' -czf PlanGuidePlanner-${{ env.VERSION }}.tar.gz PlanGuidePlanner-${{ env.VERSION }}

          for d in PlanGuidePlanner-Windows*; do
            cd "${d}" || continue
            ARM64="$(echo -n ${d} | grep -o arm64 || true)"
            SETUP="$(echo -n ${d} | grep -o Setup || true)"
            NAME="PlanGuidePlanner-Windows"
            test -z "${ARM64}" || NAME="${NAME}-arm64"
            test -z "${SETUP}" || mv PlanGuidePlanner-*.exe ../${NAME}-Setup-${{env.VERSION}}.exe
            test -n "${SETUP}" || zip -r -9 "../${NAME}-${{env.VERSION}}.zip" *
            cd ..
          done
          
          for d in PlanGuidePlanner-Android*; do
            cd "${d}" || continue
            ARM7="$(echo -n ${d} | grep -o arm7 || true)"
            X64="$(echo -n ${d} | grep -o x86_64 || true)"
            X86="$(echo -n ${d} | grep -o x86 || true)"
            ARM64="$(echo -n ${d} | grep -o arm64 || true)"
            NAME="PlanGuidePlanner-Android"
            test -z "${ARM7}" || NAME="${NAME}-arm7"
            test -z "${X86}" || NAME="${NAME}-x86"
            test -z "${X64}" || NAME="${NAME}_64"
            test -z "${ARM64}" || NAME="${NAME}-arm64"
            mv PlanGuidePlanner.apk ../${NAME}-${{env.VERSION}}.apk
            cd ..
          done

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: PlanGuidePlanner ${{ env.VERSION }}
          draft: true
          prerelease: false
          files: |
            PlanGuidePlanner-Linux-${{ env.VERSION }}.tar.gz
            PlanGuidePlanner-Linux-${{ env.VERSION }}.deb
            PlanGuidePlanner-Windows-${{ env.VERSION }}.zip
            PlanGuidePlanner-Windows-Setup-${{ env.VERSION }}.exe
            PlanGuidePlanner-Windows-arm64-${{ env.VERSION }}.zip
            PlanGuidePlanner-Windows-arm64-Setup-${{ env.VERSION }}.exe
            PlanGuidePlanner-WASM-${{ env.VERSION }}.tar.gz
            PlanGuidePlanner-Android-arm7-${{ env.VERSION }}.apk
            PlanGuidePlanner-Android-arm64-${{ env.VERSION }}.apk
            PlanGuidePlanner-Android-x86-${{ env.VERSION }}.apk
            PlanGuidePlanner-Android-x86_64-${{ env.VERSION }}.apk
            PlanGuidePlanner-${{ env.VERSION }}.tar.gz

  deploy_release:
    needs: build_release
    runs-on: ubuntu-latest
    environment:
      name: PlanGuidePlanner
      url: https://planguideplanner.pages.dev/
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Download WASM Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: PlanGuidePlanner-Pages-*
          merge-multiple: true
          path: .

      - name: Deploy to Cloudflare Pages
        id: deployment
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: .
